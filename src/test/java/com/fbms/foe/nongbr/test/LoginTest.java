/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.fbms.foe.nongbr.test;

import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.fbms.framework.BaseTest;
import com.fbms.framework.DriverFactory;
import com.fbms.foe.pagefactory.accountshome.AccountsHomePage;
import com.fbms.foe.pagefactory.LoginPage;
import com.fbms.utils.TestDataFactory;
import com.relevantcodes.extentreports.LogStatus;

public class LoginTest extends BaseTest {
	LoginPage objLogin;

	public LoginTest() throws Exception {
		super();
	}

	@BeforeMethod(dependsOnMethods = { "getDriver" })
	public void startTest() {
		objLogin = new LoginPage(driver);

		DriverFactory.timeOuts();
	}

	@Test(description = "verifying the user is not able to login with valid ID and Invalid Password")
	public void loginInvalidPassword() {
		objLogin.clickBySelection();
		objLogin.setUserName(TestDataFactory.ReadCellData(0, 1, 0));
		objLogin.setPassword(TestDataFactory.ReadCellData(0, 4, 0));
		objLogin.clickSignin();

		if (objLogin.getLoginError().equals(TestDataFactory.ReadCellData(0, 5, 0))) {
			Assert.assertEquals(objLogin.getLoginError(), TestDataFactory.ReadCellData(0, 5, 0));
			ReportLogger.log(LogStatus.PASS, "User successfully failed to login with the invalid credentials");
		} else {
			Assert.assertEquals(objLogin.getLoginError(), TestDataFactory.ReadCellData(0, 5, 0));
			ReportLogger.log(LogStatus.FAIL, "User couldn't fail to login with the credentials");
		}
	}

	@Test(description = "verifying the user is not able to login with invalid ID and valid Password")
	public void loginInvalidId() {
		objLogin.clickBySelection();
		objLogin.setUserName(TestDataFactory.ReadCellData(0, 3, 0));
		objLogin.setPassword(TestDataFactory.ReadCellData(0, 2, 0));
		objLogin.clickSignin();

		if (objLogin.getLoginError().equals(TestDataFactory.ReadCellData(0, 5, 0))) {
			Assert.assertEquals(objLogin.getLoginError(), TestDataFactory.ReadCellData(0, 5, 0));
			ReportLogger.log(LogStatus.PASS, "User successfully failed to login with the invalid credentials");
		} else {
			Assert.assertEquals(objLogin.getLoginError(), TestDataFactory.ReadCellData(0, 5, 0));
			ReportLogger.log(LogStatus.FAIL, "User couldn't fail to login with the credentials");
		}
	}

	@Test(description = "verifying the user is not able to login with invalid ID and Password")
	public void loginInvalidBoth() {
		objLogin.clickBySelection();
		objLogin.setUserName(TestDataFactory.ReadCellData(0, 3, 0));
		objLogin.setPassword(TestDataFactory.ReadCellData(0, 4, 0));
		objLogin.clickSignin();

		if (objLogin.getLoginError().equals(TestDataFactory.ReadCellData(0, 5, 0))) {
			Assert.assertEquals(objLogin.getLoginError(), TestDataFactory.ReadCellData(0, 5, 0));
			ReportLogger.log(LogStatus.PASS, "User successfully failed to login with the invalid credentials");
		} else {
			Assert.assertEquals(objLogin.getLoginError(), TestDataFactory.ReadCellData(0, 5, 0));
			ReportLogger.log(LogStatus.FAIL, "User couldn't fail to login with the credentials");
		}
	}

	@Test(description = "verifying the user is able to login with valid ID and Password")
	public void loginValidBoth() {
		AccountsHomePage accountsHomePage = objLogin.login(
				TestDataFactory.ReadCellData(0, 1, 0).trim(),
				TestDataFactory.ReadCellData(0, 2, 0).trim()
				);

		if(driver.getTitle().equals("FBMSNG")) {
			ReportLogger.log(LogStatus.PASS, "User successfully logged in into FBMS");
		} else {
			ReportLogger.log(LogStatus.FAIL, "User failed to login into FBMS");
		}

		if (accountsHomePage.logoutButtonExist() == true) {
			ReportLogger.log(LogStatus.PASS, "User logged out successfully");
		} else {
			ReportLogger.log(LogStatus.FAIL, "User failed to logout");
			Assert.assertTrue(accountsHomePage.logoutButtonExist());
		}
	}
}